{"version":3,"file":"static/js/8147.cc9c7534.chunk.js","mappings":"oMAEA,MAuBMA,EAAkBC,IAA6B,IAA5B,QAAEC,EAAO,UAAEC,GAAWF,CAAA,C,oDCzB/C,MAAMG,EAAe,CACnB,CAAEC,KAAM,eAAMH,QAAS,EAAGC,UAAW,GACrC,CAAEE,KAAM,eAAMH,QAAS,EAAGC,UAAW,GACrC,CAAEE,KAAM,eAAMH,QAAS,EAAGC,UAAW,GACrC,CAAEE,KAAM,eAAMH,QAAS,EAAGC,UAAW,GACrC,CAAEE,KAAM,2BAAQH,QAAS,EAAGC,UAAW,GACvC,CAAEE,KAAM,eAAMH,QAAS,EAAGC,UAAW,IACrC,CAAEE,KAAM,eAAMH,QAAS,EAAGC,UAAW,I,0PCPvC,MAAMG,EAAY,CAChB,CAAED,KAAM,gEAAeH,QAAS,EAAGC,UAAW,GAC9C,CAAEE,KAAM,sEAAgBH,QAAS,EAAGC,UAAW,GAC/C,CAAEE,KAAM,kFAAkBH,QAAS,EAAGC,UAAW,GACjD,CAAEE,KAAM,gEAAeH,QAAS,EAAGC,UAAW,GAC9C,CAAEE,KAAM,4EAAiBH,QAAS,EAAGC,UAAW,GAChD,CAAEE,KAAM,sEAAgBH,QAAS,EAAGC,UAAW,GAC/C,CAAEE,KAAM,8FAAoBH,QAAS,EAAGC,UAAW,GACnD,CAAEE,KAAM,wFAAmBH,QAAS,EAAGC,UAAW,GAClD,CAAEE,KAAM,sEAAgBH,QAAS,EAAGC,UAAW,GAC/C,CAAEE,KAAM,gEAAeH,QAAS,EAAGC,UAAW,GAC9C,CAAEE,KAAM,4EAAiBH,QAAS,EAAGC,UAAW,GAChD,CAAEE,KAAM,sEAAgBH,QAAS,EAAGC,UAAW,IAC/C,CAAEE,KAAM,kFAAkBH,QAAS,EAAGC,UAAW,IACjD,CAAEE,KAAM,sEAAgBH,QAAS,EAAGC,UAAW,I,6CCdjD,MAAMI,EAAQ,CACZ,CAAEF,KAAM,iCAASG,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAChD,CAAEH,KAAM,iCAASG,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,K,+CCFlD,MAAMC,EAAU,CACd,wFACA,sEACA,mFACA,uEACA,uEACA,6EACA,mFACA,+F,6CCRF,MAAMC,EAAQ,CACZ,CAAEL,KAAM,uEAAiBF,WAAY,GACrC,CAAEE,KAAM,wCAAWF,WAAY,GAC/B,CAAEE,KAAM,GAAIF,UAAW,GACvB,CAAEE,KAAM,4BAASF,UAAW,GAC5B,CAAEE,KAAM,2DAAeF,UAAW,G","sources":["applications/MusicTheory/MusicTheoryFunctions/getSoundAndSign.js","applications/MusicTheory/MusicTheoryItems/commonSounds.js","applications/MusicTheory/MusicTheoryItems/intervals.js","applications/MusicTheory/MusicTheoryItems/modes.js","applications/MusicTheory/MusicTheoryItems/octaves.js","applications/MusicTheory/MusicTheoryItems/signs.js"],"sourcesContent":["import { commonSounds, signs, octaves } from \"../MusicTheoryItems\";\n\nconst getSign = (semitones) => {\n  return signs.find((sign) => {\n    sign.semitones === semitones;\n  });\n};\n\nconst getOctave = (index) => {\n  return octaves[index];\n};\n\nconst getSound = (degrees) => {\n  return commonSounds.find((sound) => {\n    sound.degrees === degrees;\n  });\n};\n\nconst separateOctaves = ({ degrees, semitones }) => {\n  const clearDegrees = degrees % 7;\n  const octaves = (degrees - clearDegrees) / 7;\n  const clearSemitones = semitones - 12 * octaves;\n  return { degrees: clearDegrees, semitones: clearSemitones, octaves };\n};\n\nconst getSoundAndSign = ({ degrees, semitones }) => {};\n\nexport { getSoundAndSign };\n","const commonSounds = [\n  { name: \"До\", degrees: 1, semitones: 1 },\n  { name: \"Ре\", degrees: 2, semitones: 3 },\n  { name: \"Мі\", degrees: 3, semitones: 5 },\n  { name: \"Фа\", degrees: 4, semitones: 6 },\n  { name: \"Соль\", degrees: 5, semitones: 8 },\n  { name: \"Ля\", degrees: 6, semitones: 10 },\n  { name: \"Сі\", degrees: 7, semitones: 12 },\n];\n\nexport { commonSounds };\n","const intervals = [\n  { name: \"Чиста прима\", degrees: 0, semitones: 0 },\n  { name: \"Мала секунда\", degrees: 1, semitones: 1 },\n  { name: \"Велика секунда\", degrees: 1, semitones: 2 },\n  { name: \"Мала терція\", degrees: 2, semitones: 3 },\n  { name: \"Велика терція\", degrees: 2, semitones: 4 },\n  { name: \"Чиста кварта\", degrees: 3, semitones: 5 },\n  { name: \"Збільшена кварта\", degrees: 3, semitones: 6 },\n  { name: \"Зменшена квінта\", degrees: 4, semitones: 6 },\n  { name: \"Чиста квінта\", degrees: 4, semitones: 7 },\n  { name: \"Мала секста\", degrees: 5, semitones: 8 },\n  { name: \"Велика секста\", degrees: 5, semitones: 9 },\n  { name: \"Мала септима\", degrees: 6, semitones: 10 },\n  { name: \"Велика септима\", degrees: 6, semitones: 11 },\n  { name: \"Чиста октава\", degrees: 7, semitones: 12 },\n];\n\nexport { intervals };\n","const modes = [\n  { name: \"мажор\", scheme: [0, 2, 4, 5, 7, 9, 11, 12] },\n  { name: \"мінор\", scheme: [0, 2, 3, 5, 7, 8, 10, 12] },\n];\n\nexport { modes };\n","const octaves = [\n  \" субконтроктави\",\n  \" контроктави\",\n  \" великої октави\",\n  \" малої октави\",\n  \" пешої октави\",\n  \" другої октави\",\n  \" третьої октави\",\n  \" четвертої октави\",\n];\n\nexport { octaves };\n","const signs = [\n  { name: \"-дубль-бемоль\", semitones: -2 },\n  { name: \"-бемоль\", semitones: -1 },\n  { name: \"\", semitones: 0 },\n  { name: \"-дієз\", semitones: 1 },\n  { name: \"-дубль-дієз\", semitones: 2 },\n];\n\nexport { signs };\n"],"names":["getSoundAndSign","_ref2","degrees","semitones","commonSounds","name","intervals","modes","scheme","octaves","signs"],"sourceRoot":""}