{"version":3,"file":"static/js/3240.ec5a52b7.chunk.js","mappings":"0MAEA,SAASA,EAASC,EAAcC,EAAgBC,EAAoBC,GAClE,MAAM,OAAEC,GAAWC,EAAAA,MAAMC,MAAMC,IAC7BA,EAAKC,IAAiB,IAGxB,IAAK,IAAIC,EAAc,EAAGA,GAAe,EAAGA,GAAe,EAAG,CAC5D,MAAMC,GAAuBV,EAAeS,GAAe,EACrDE,GACFV,EAAiBM,KAAKE,IAAgB,GAAMP,EAChDU,WAAWC,KACTC,gBAAgBJ,EAAqBC,GAEzC,CAEA,OAAOC,UACT,C,gECfA,MAAMG,EAAeA,CAACC,EAAcC,EAAgBC,KAClD,MAAMC,EAAoBH,EAAe,EACnCI,EAAsBH,EAAiB,GAGvCI,EAAmBH,EADKI,KAAKC,MAAMP,EAAe,IAGhDR,KAAMgB,EAAWC,UAAWC,GAClCC,EAAAA,aAAarB,MAAMsB,GAAUA,EAAMC,UAAYV,KAEzCX,KAAMsB,GAAaC,EAAAA,MAAMzB,MAC9B0B,GAASA,EAAKP,YAAcL,EAAsBM,IAGrD,MAAO,CAAElB,KAAMgB,EAAWQ,KAAMF,EAAUG,OAAQC,EAAAA,QAAQb,GAAmB,C,kKChB/E,MAAMM,EAAe,CACnB,CAAEnB,KAAM,eAAMqB,QAAS,EAAGJ,UAAW,GACrC,CAAEjB,KAAM,eAAMqB,QAAS,EAAGJ,UAAW,GACrC,CAAEjB,KAAM,eAAMqB,QAAS,EAAGJ,UAAW,GACrC,CAAEjB,KAAM,eAAMqB,QAAS,EAAGJ,UAAW,GACrC,CAAEjB,KAAM,2BAAQqB,QAAS,EAAGJ,UAAW,GACvC,CAAEjB,KAAM,eAAMqB,QAAS,EAAGJ,UAAW,IACrC,CAAEjB,KAAM,eAAMqB,QAAS,EAAGJ,UAAW,I,0PCPvC,MAAMU,EAAY,CAChB,CAAE3B,KAAM,gEAAeqB,QAAS,EAAGJ,UAAW,GAC9C,CAAEjB,KAAM,sEAAgBqB,QAAS,EAAGJ,UAAW,GAC/C,CAAEjB,KAAM,kFAAkBqB,QAAS,EAAGJ,UAAW,GACjD,CAAEjB,KAAM,gEAAeqB,QAAS,EAAGJ,UAAW,GAC9C,CAAEjB,KAAM,4EAAiBqB,QAAS,EAAGJ,UAAW,GAChD,CAAEjB,KAAM,sEAAgBqB,QAAS,EAAGJ,UAAW,GAC/C,CAAEjB,KAAM,8FAAoBqB,QAAS,EAAGJ,UAAW,GACnD,CAAEjB,KAAM,wFAAmBqB,QAAS,EAAGJ,UAAW,GAClD,CAAEjB,KAAM,sEAAgBqB,QAAS,EAAGJ,UAAW,GAC/C,CAAEjB,KAAM,gEAAeqB,QAAS,EAAGJ,UAAW,GAC9C,CAAEjB,KAAM,4EAAiBqB,QAAS,EAAGJ,UAAW,GAChD,CAAEjB,KAAM,sEAAgBqB,QAAS,EAAGJ,UAAW,IAC/C,CAAEjB,KAAM,kFAAkBqB,QAAS,EAAGJ,UAAW,IACjD,CAAEjB,KAAM,sEAAgBqB,QAAS,EAAGJ,UAAW,I,6CCdjD,MAAMpB,EAAQ,CACZ,CAAEG,KAAM,iCAASJ,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAChD,CAAEI,KAAM,iCAASJ,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,K,+CCFlD,MAAM8B,EAAU,CACd,wFACA,sEACA,mFACA,uEACA,uEACA,6EACA,mFACA,+F,6CCRF,MAAMH,EAAQ,CACZ,CAAEvB,KAAM,uEAAiBiB,WAAY,GACrC,CAAEjB,KAAM,wCAAWiB,WAAY,GAC/B,CAAEjB,KAAM,GAAIiB,UAAW,GACvB,CAAEjB,KAAM,4BAASiB,UAAW,GAC5B,CAAEjB,KAAM,2DAAeiB,UAAW,G","sources":["applications/MusicTheory/MusicTheoryFunctions/getGamut.js","applications/MusicTheory/MusicTheoryFunctions/getSoundData.js","applications/MusicTheory/MusicTheoryItems/commonSounds.js","applications/MusicTheory/MusicTheoryItems/intervals.js","applications/MusicTheory/MusicTheoryItems/modes.js","applications/MusicTheory/MusicTheoryItems/octaves.js","applications/MusicTheory/MusicTheoryItems/signs.js"],"sourcesContent":["import { modes } from \"../MusicTheoryItems\";\n\nfunction getGamut(firstDegrees, firstSemitones, firstSignSemitones, modeName) {\n  const { scheme } = modes.find((mode) => {\n    mode.name === modeName;\n  });\n\n  for (let soundNumber = 0; soundNumber <= 7; soundNumber += 1) {\n    const currentSoundDegrees = (firstDegrees + soundNumber) % 7;\n    const currentSoundSemitones =\n      ((firstSemitones + mode[soundNumber]) % 12) + firstSignSemitones;\n    gamutArray.push(\n      getSoundAndSign(currentSoundDegrees, currentSoundSemitones)\n    );\n  }\n\n  return gamutArray;\n}\n\nexport { getGamut };\n","import { commonSounds, signs, octaves } from \"../MusicTheoryItems\";\n\nconst getSoundData = (soundDegrees, soundSemitones, initialOctaveIndex) => {\n  const clearSoundDegrees = soundDegrees % 7;\n  const clearSoundSemitones = soundSemitones % 12;\n\n  const soundOctaveDifference = Math.floor(soundDegrees / 7);\n  const soundOctaveIndex = initialOctaveIndex + soundOctaveDifference;\n\n  const { name: soundName, semitones: commonSoundSemitones } =\n    commonSounds.find((sound) => sound.degrees === clearSoundDegrees);\n\n  const { name: signName } = signs.find(\n    (sign) => sign.semitones === clearSoundSemitones - commonSoundSemitones\n  );\n\n  return { name: soundName, sign: signName, octave: octaves[soundOctaveIndex] };\n};\n\nexport { getSoundData };\n","const commonSounds = [\n  { name: \"До\", degrees: 1, semitones: 1 },\n  { name: \"Ре\", degrees: 2, semitones: 3 },\n  { name: \"Мі\", degrees: 3, semitones: 5 },\n  { name: \"Фа\", degrees: 4, semitones: 6 },\n  { name: \"Соль\", degrees: 5, semitones: 8 },\n  { name: \"Ля\", degrees: 6, semitones: 10 },\n  { name: \"Сі\", degrees: 7, semitones: 12 },\n];\n\nexport { commonSounds };\n","const intervals = [\n  { name: \"Чиста прима\", degrees: 0, semitones: 0 },\n  { name: \"Мала секунда\", degrees: 1, semitones: 1 },\n  { name: \"Велика секунда\", degrees: 1, semitones: 2 },\n  { name: \"Мала терція\", degrees: 2, semitones: 3 },\n  { name: \"Велика терція\", degrees: 2, semitones: 4 },\n  { name: \"Чиста кварта\", degrees: 3, semitones: 5 },\n  { name: \"Збільшена кварта\", degrees: 3, semitones: 6 },\n  { name: \"Зменшена квінта\", degrees: 4, semitones: 6 },\n  { name: \"Чиста квінта\", degrees: 4, semitones: 7 },\n  { name: \"Мала секста\", degrees: 5, semitones: 8 },\n  { name: \"Велика секста\", degrees: 5, semitones: 9 },\n  { name: \"Мала септима\", degrees: 6, semitones: 10 },\n  { name: \"Велика септима\", degrees: 6, semitones: 11 },\n  { name: \"Чиста октава\", degrees: 7, semitones: 12 },\n];\n\nexport { intervals };\n","const modes = [\n  { name: \"мажор\", scheme: [0, 2, 4, 5, 7, 9, 11, 12] },\n  { name: \"мінор\", scheme: [0, 2, 3, 5, 7, 8, 10, 12] },\n];\n\nexport { modes };\n","const octaves = [\n  \" субконтроктави\",\n  \" контроктави\",\n  \" великої октави\",\n  \" малої октави\",\n  \" пешої октави\",\n  \" другої октави\",\n  \" третьої октави\",\n  \" четвертої октави\",\n];\n\nexport { octaves };\n","const signs = [\n  { name: \"-дубль-бемоль\", semitones: -2 },\n  { name: \"-бемоль\", semitones: -1 },\n  { name: \"\", semitones: 0 },\n  { name: \"-дієз\", semitones: 1 },\n  { name: \"-дубль-дієз\", semitones: 2 },\n];\n\nexport { signs };\n"],"names":["getGamut","firstDegrees","firstSemitones","firstSignSemitones","modeName","scheme","modes","find","mode","name","soundNumber","currentSoundDegrees","currentSoundSemitones","gamutArray","push","getSoundAndSign","getSoundData","soundDegrees","soundSemitones","initialOctaveIndex","clearSoundDegrees","clearSoundSemitones","soundOctaveIndex","Math","floor","soundName","semitones","commonSoundSemitones","commonSounds","sound","degrees","signName","signs","sign","octave","octaves","intervals"],"sourceRoot":""}