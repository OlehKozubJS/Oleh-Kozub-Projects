{"version":3,"file":"static/js/629.0844edff.chunk.js","mappings":"qMAEA,MAAMA,EAAeA,CAACC,EAAcC,EAAgBC,KAClD,MAAMC,EAAoBH,EAAe,EACnCI,EAAsBH,EAAiB,GAGvCI,EAAmBH,EADKI,KAAKC,MAAMP,EAAe,IAGhDQ,KAAMC,EAAWC,UAAWC,GAClCC,EAAAA,aAAaC,MAAMC,GAAUA,EAAMC,UAAYZ,KAEzCK,KAAMQ,GAAaC,EAAAA,MAAMJ,MAC9BK,GAASA,EAAKR,YAAcN,EAAsBO,IAGrD,MAAO,CAAEH,KAAMC,EAAWS,KAAMF,EAAUG,OAAQC,EAAAA,QAAQf,GAAmB,C,oDChB/E,MAAMO,EAAe,CACnB,CAAEJ,KAAM,eAAMO,QAAS,EAAGL,UAAW,GACrC,CAAEF,KAAM,eAAMO,QAAS,EAAGL,UAAW,GACrC,CAAEF,KAAM,eAAMO,QAAS,EAAGL,UAAW,GACrC,CAAEF,KAAM,eAAMO,QAAS,EAAGL,UAAW,GACrC,CAAEF,KAAM,2BAAQO,QAAS,EAAGL,UAAW,GACvC,CAAEF,KAAM,eAAMO,QAAS,EAAGL,UAAW,IACrC,CAAEF,KAAM,eAAMO,QAAS,EAAGL,UAAW,I,0PCPvC,MAAMW,EAAY,CAChB,CAAEb,KAAM,gEAAeO,QAAS,EAAGL,UAAW,GAC9C,CAAEF,KAAM,sEAAgBO,QAAS,EAAGL,UAAW,GAC/C,CAAEF,KAAM,kFAAkBO,QAAS,EAAGL,UAAW,GACjD,CAAEF,KAAM,gEAAeO,QAAS,EAAGL,UAAW,GAC9C,CAAEF,KAAM,4EAAiBO,QAAS,EAAGL,UAAW,GAChD,CAAEF,KAAM,sEAAgBO,QAAS,EAAGL,UAAW,GAC/C,CAAEF,KAAM,8FAAoBO,QAAS,EAAGL,UAAW,GACnD,CAAEF,KAAM,wFAAmBO,QAAS,EAAGL,UAAW,GAClD,CAAEF,KAAM,sEAAgBO,QAAS,EAAGL,UAAW,GAC/C,CAAEF,KAAM,gEAAeO,QAAS,EAAGL,UAAW,GAC9C,CAAEF,KAAM,4EAAiBO,QAAS,EAAGL,UAAW,GAChD,CAAEF,KAAM,sEAAgBO,QAAS,EAAGL,UAAW,IAC/C,CAAEF,KAAM,kFAAkBO,QAAS,EAAGL,UAAW,IACjD,CAAEF,KAAM,sEAAgBO,QAAS,EAAGL,UAAW,I,6CCdjD,MAAMY,EAAQ,CACZ,CAAEd,KAAM,iCAASe,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAChD,CAAEf,KAAM,iCAASe,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,K,+CCFlD,MAAMH,EAAU,CACd,wFACA,sEACA,mFACA,uEACA,uEACA,6EACA,mFACA,+F,6CCRF,MAAMH,EAAQ,CACZ,CAAET,KAAM,uEAAiBE,WAAY,GACrC,CAAEF,KAAM,wCAAWE,WAAY,GAC/B,CAAEF,KAAM,GAAIE,UAAW,GACvB,CAAEF,KAAM,4BAASE,UAAW,GAC5B,CAAEF,KAAM,2DAAeE,UAAW,G","sources":["applications/MusicTheory/MusicTheoryFunctions/getSoundData.js","applications/MusicTheory/MusicTheoryItems/commonSounds.js","applications/MusicTheory/MusicTheoryItems/intervals.js","applications/MusicTheory/MusicTheoryItems/modes.js","applications/MusicTheory/MusicTheoryItems/octaves.js","applications/MusicTheory/MusicTheoryItems/signs.js"],"sourcesContent":["import { commonSounds, signs, octaves } from \"../MusicTheoryItems\";\n\nconst getSoundData = (soundDegrees, soundSemitones, initialOctaveIndex) => {\n  const clearSoundDegrees = soundDegrees % 7;\n  const clearSoundSemitones = soundSemitones % 12;\n\n  const soundOctaveDifference = Math.floor(soundDegrees / 7);\n  const soundOctaveIndex = initialOctaveIndex + soundOctaveDifference;\n\n  const { name: soundName, semitones: commonSoundSemitones } =\n    commonSounds.find((sound) => sound.degrees === clearSoundDegrees);\n\n  const { name: signName } = signs.find(\n    (sign) => sign.semitones === clearSoundSemitones - commonSoundSemitones\n  );\n\n  return { name: soundName, sign: signName, octave: octaves[soundOctaveIndex] };\n};\n\nexport { getSoundData };\n","const commonSounds = [\n  { name: \"До\", degrees: 1, semitones: 1 },\n  { name: \"Ре\", degrees: 2, semitones: 3 },\n  { name: \"Мі\", degrees: 3, semitones: 5 },\n  { name: \"Фа\", degrees: 4, semitones: 6 },\n  { name: \"Соль\", degrees: 5, semitones: 8 },\n  { name: \"Ля\", degrees: 6, semitones: 10 },\n  { name: \"Сі\", degrees: 7, semitones: 12 },\n];\n\nexport { commonSounds };\n","const intervals = [\n  { name: \"Чиста прима\", degrees: 0, semitones: 0 },\n  { name: \"Мала секунда\", degrees: 1, semitones: 1 },\n  { name: \"Велика секунда\", degrees: 1, semitones: 2 },\n  { name: \"Мала терція\", degrees: 2, semitones: 3 },\n  { name: \"Велика терція\", degrees: 2, semitones: 4 },\n  { name: \"Чиста кварта\", degrees: 3, semitones: 5 },\n  { name: \"Збільшена кварта\", degrees: 3, semitones: 6 },\n  { name: \"Зменшена квінта\", degrees: 4, semitones: 6 },\n  { name: \"Чиста квінта\", degrees: 4, semitones: 7 },\n  { name: \"Мала секста\", degrees: 5, semitones: 8 },\n  { name: \"Велика секста\", degrees: 5, semitones: 9 },\n  { name: \"Мала септима\", degrees: 6, semitones: 10 },\n  { name: \"Велика септима\", degrees: 6, semitones: 11 },\n  { name: \"Чиста октава\", degrees: 7, semitones: 12 },\n];\n\nexport { intervals };\n","const modes = [\n  { name: \"мажор\", scheme: [0, 2, 4, 5, 7, 9, 11, 12] },\n  { name: \"мінор\", scheme: [0, 2, 3, 5, 7, 8, 10, 12] },\n];\n\nexport { modes };\n","const octaves = [\n  \" субконтроктави\",\n  \" контроктави\",\n  \" великої октави\",\n  \" малої октави\",\n  \" пешої октави\",\n  \" другої октави\",\n  \" третьої октави\",\n  \" четвертої октави\",\n];\n\nexport { octaves };\n","const signs = [\n  { name: \"-дубль-бемоль\", semitones: -2 },\n  { name: \"-бемоль\", semitones: -1 },\n  { name: \"\", semitones: 0 },\n  { name: \"-дієз\", semitones: 1 },\n  { name: \"-дубль-дієз\", semitones: 2 },\n];\n\nexport { signs };\n"],"names":["getSoundData","soundDegrees","soundSemitones","initialOctaveIndex","clearSoundDegrees","clearSoundSemitones","soundOctaveIndex","Math","floor","name","soundName","semitones","commonSoundSemitones","commonSounds","find","sound","degrees","signName","signs","sign","octave","octaves","intervals","modes","scheme"],"sourceRoot":""}