{"version":3,"file":"static/js/1499.999ca757.chunk.js","mappings":"wKAAA,MAAMA,EAAe,CACnB,CAAEC,KAAM,eAAMC,QAAS,EAAGC,UAAW,GACrC,CAAEF,KAAM,eAAMC,QAAS,EAAGC,UAAW,GACrC,CAAEF,KAAM,eAAMC,QAAS,EAAGC,UAAW,GACrC,CAAEF,KAAM,eAAMC,QAAS,EAAGC,UAAW,GACrC,CAAEF,KAAM,2BAAQC,QAAS,EAAGC,UAAW,GACvC,CAAEF,KAAM,eAAMC,QAAS,EAAGC,UAAW,IACrC,CAAEF,KAAM,eAAMC,QAAS,EAAGC,UAAW,KAGjCC,EAAQ,CACZ,CAAEH,KAAM,uEAAiBE,WAAY,GACrC,CAAEF,KAAM,wCAAWE,WAAY,GAC/B,CAAEF,KAAM,GAAIE,UAAW,GACvB,CAAEF,KAAM,4BAASE,UAAW,GAC5B,CAAEF,KAAM,2DAAeE,UAAW,IAG9BE,EAAU,CACd,wFACA,sEACA,mFACA,uEACA,uEACA,6EACA,mFACA,gGAGIC,EAA0BA,CAC9BC,EACAC,EACAC,KAEA,MAAMC,EAAoBH,EAAe,EACnCI,EAAsBH,EAAiB,GAGvCI,EAAmBH,EADKI,KAAKC,MAAMP,EAAe,IAGhDN,KAAMc,EAAWZ,UAAWa,GAClChB,EAAaiB,MAAMC,GAAUA,EAAMhB,UAAYQ,KAEzCT,KAAMkB,GAAaf,EAAMa,MAC9BG,GAASA,EAAKjB,YAAcQ,EAAsBK,IAGrD,MAAO,CAAEf,KAAMc,EAAWK,KAAMD,EAAUE,OAAQhB,EAAQO,GAAmB,C","sources":["applications/MusicTheory/sounds.js"],"sourcesContent":["const commonSounds = [\n  { name: \"До\", degrees: 1, semitones: 1 },\n  { name: \"Ре\", degrees: 2, semitones: 3 },\n  { name: \"Мі\", degrees: 3, semitones: 5 },\n  { name: \"Фа\", degrees: 4, semitones: 6 },\n  { name: \"Соль\", degrees: 5, semitones: 8 },\n  { name: \"Ля\", degrees: 6, semitones: 10 },\n  { name: \"Сі\", degrees: 7, semitones: 12 },\n];\n\nconst signs = [\n  { name: \"-дубль-бемоль\", semitones: -2 },\n  { name: \"-бемоль\", semitones: -1 },\n  { name: \"\", semitones: 0 },\n  { name: \"-дієз\", semitones: 1 },\n  { name: \"-дубль-дієз\", semitones: 2 },\n];\n\nconst octaves = [\n  \" субконтроктави\",\n  \" контроктави\",\n  \" великої октави\",\n  \" малої октави\",\n  \" пешої октави\",\n  \" другої октави\",\n  \" третьої октави\",\n  \" четвертої октави\",\n];\n\nconst getFullSoundInformation = (\n  soundDegrees,\n  soundSemitones,\n  initialOctaveIndex\n) => {\n  const clearSoundDegrees = soundDegrees % 7;\n  const clearSoundSemitones = soundSemitones % 12;\n\n  const soundOctaveDifference = Math.floor(soundDegrees / 7);\n  const soundOctaveIndex = initialOctaveIndex + soundOctaveDifference;\n\n  const { name: soundName, semitones: commonSoundSemitones } =\n    commonSounds.find((sound) => sound.degrees === clearSoundDegrees);\n\n  const { name: signName } = signs.find(\n    (sign) => sign.semitones === clearSoundSemitones - commonSoundSemitones\n  );\n\n  return { name: soundName, sign: signName, octave: octaves[soundOctaveIndex] };\n};\n\nexport { getFullSoundInformation };\n"],"names":["commonSounds","name","degrees","semitones","signs","octaves","getFullSoundInformation","soundDegrees","soundSemitones","initialOctaveIndex","clearSoundDegrees","clearSoundSemitones","soundOctaveIndex","Math","floor","soundName","commonSoundSemitones","find","sound","signName","sign","octave"],"sourceRoot":""}